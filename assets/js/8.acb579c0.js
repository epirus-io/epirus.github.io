(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{321:function(e,t,a){e.exports=a.p+"assets/img/loading.07ef565a.png"},392:function(e,t,a){e.exports=a.p+"assets/img/azure_offer.c78bd559.png"},393:function(e,t,a){e.exports=a.p+"assets/img/connection_strings.092baca2.png"},394:function(e,t,a){e.exports=a.p+"assets/img/aws_offer.70c9cb34.png"},428:function(e,t,a){"use strict";a.r(t);var s=a(9),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"getting-started"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[e._v("#")]),e._v(" Getting Started")]),e._v(" "),s("p",[e._v("Epirus supports a number of different hosting options which all come with support from the Web3 Labs team:")]),e._v(" "),s("ol",[s("li",[e._v("Cloud - you can find it in the "),s("a",{attrs:{href:"https://web3labs.com/aws-offer",target:"_blank",rel:"noopener noreferrer"}},[e._v("AWS"),s("OutboundLink")],1),e._v(" and "),s("a",{attrs:{href:"https://web3labs.com/azure-offer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Azure"),s("OutboundLink")],1),e._v(" marketplaces")]),e._v(" "),s("li",[e._v("SaaS - we also provide a hosted or on-premise "),s("a",{attrs:{href:"#enterprise"}},[e._v("Enterprise")]),e._v(" version")])]),e._v(" "),s("p",[e._v("There is also a basic "),s("a",{attrs:{href:"#free"}},[e._v("Free")]),e._v(" version.")]),e._v(" "),s("p",[e._v("This documentation reflects the features of our AWS, Azure and Enterprise versions.")]),e._v(" "),s("h2",{attrs:{id:"azure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#azure"}},[e._v("#")]),e._v(" Azure")]),e._v(" "),s("p",[e._v("The "),s("a",{attrs:{href:"https://web3labs.com/azure-offer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Azure Marketplace offer"),s("OutboundLink")],1),e._v(" is the simplest full version of Epirus\nto get up and running with. It requires an active Azure cloud subscription")]),e._v(" "),s("p",[s("img",{attrs:{src:a(392),alt:"Azure Marketplace offer"}})]),e._v(" "),s("p",[e._v("You will need to provide details of your managed ledger (or Ethereum/Quorum/Hyperledger Besu) node. In your Azure portal, navigate to the Azure Blockchain Service instance you wish to use. From here click "),s("code",[e._v("Transaction nodes -> <your-transaction-node> -> Connection strings")])]),e._v(" "),s("p",[e._v("Then copy the HTTPS access keys with node URL, such as "),s("code",[e._v("https://<your-service>.blockchain.azure.com:3200/<acess-key>")]),e._v(" (an example screenshot is shown below)")]),e._v(" "),s("p",[s("img",{attrs:{src:a(393),alt:"Example connection string"}})]),e._v(" "),s("p",[e._v("You will be able to access the Explorer UI via "),s("code",[e._v("http://<instance-name>-<uuid>.<region>.cloudapp.azure.com")])]),e._v(" "),s("p",[e._v("To view the actual URL, navigate to the Overview page for the resource group you used for Epirus, then head to "),s("code",[e._v("Deployments -> blk-technologies.... -> Outputs -> epirusUrl")]),e._v(".")]),e._v(" "),s("p",[e._v("Please allow a few minutes for the service to fully initialise and display data when initially run. You will see the below loading screen while it is initially loading.")]),e._v(" "),s("p",[s("img",{attrs:{src:a(321),alt:"loading screen"}})]),e._v(" "),s("p",[e._v("Please note, it can take a while (multiple hours) to display token and contract details as it needs to process the entire blockchain history.")]),e._v(" "),s("h2",{attrs:{id:"aws"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aws"}},[e._v("#")]),e._v(" AWS")]),e._v(" "),s("p",[e._v("The "),s("a",{attrs:{href:"https://web3labs.com/aws-offer",target:"_blank",rel:"noopener noreferrer"}},[e._v("AWS Marketplace offer"),s("OutboundLink")],1),e._v(" provides a pre-configured VM with\nEpirus already installed. It requires an active AWS subscription.")]),e._v(" "),s("p",[s("img",{attrs:{src:a(394),alt:"AWS Marketplace offer"}})]),e._v(" "),s("p",[e._v("You will need to provide details of the RPC endpoint for your Hyperledger Besu/Quorum/Ethereum node.")]),e._v(" "),s("p",[e._v("Copy the RPC endpoint for your node, such as "),s("code",[e._v("http://<your-service-url>:8545")]),e._v(" (the default RPC port is 8545). This is the same URL you use to attach a console to your node - i.e. "),s("code",[e._v("geth attach http://<your-service-url>:8545")]),e._v(" (for more information, head "),s("a",{attrs:{href:"https://github.com/ethereum/wiki/wiki/JSON-RPC#json-rpc-endpoint",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),s("OutboundLink")],1),e._v(").")]),e._v(" "),s("p",[e._v("Once the virtual machine has been deployed, launch a terminal on the machine:")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("ssh")]),e._v(" -i "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("keyfile"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" ubuntu@"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("machine name"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),s("p",[e._v("Then copy the HTTPS access keys with node URL, such as "),s("code",[e._v("http://<your-service-url>")])]),e._v(" "),s("p",[e._v("Once the virtual machine has been deployed, launch a terminal on the machine. Then run the following command to configure the node ("),s("strong",[e._v("please note AWS requires authentication credentials to be configured")]),e._v("):")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[e._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" epirus setup\nConfiguring Epirus instance\n\nPlease enter a username: "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("enter username"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\nNew password: "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("enter password"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\nRe-type new password: "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("re-enter password"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\nAdding password "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("username"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n\nPlease enter node URL: http://"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("your-service-url"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\nSuccessfully connected to http://"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("your-service-url"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\nConfiguration written to /usr/local/src/epirus/epirus.conf\n\nYou can "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v(" start the Epirus service:\n\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" systemctl start epirus.service\n")])])]),s("p",[e._v("You will be able to access the Explorer UI via "),s("code",[e._v("http://vm-ip-address-or-hostname")]),e._v(", providing the authentication credentials you specified when prompted.")]),e._v(" "),s("p",[e._v("Please allow a few minutes for the service to fully initialise and display data when initially run. It will automatically start up on subsequent reboots.")]),e._v(" "),s("p",[s("img",{attrs:{src:a(321),alt:"loading screen"}})]),e._v(" "),s("p",[e._v("Please note, it can take a while (multiple hours) to display token and contract details as it needs to process the entire blockchain history.")]),e._v(" "),s("p",[e._v("If you need to modify or create additional access credentials, you can use the following command:")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" epirus "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("passwd")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("new or existing username"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),s("h2",{attrs:{id:"enterprise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enterprise"}},[e._v("#")]),e._v(" Enterprise")]),e._v(" "),s("p",[e._v("Web3 Labs also provides hosted Blockchain Explorer instances - these can be hosted within your cloud subscription or hosted by us.")]),e._v(" "),s("p",[e._v("Some of the features include:")]),e._v(" "),s("ul",[s("li",[e._v("SSO authentication (Active Directory, SAML, Okta, etc)")]),e._v(" "),s("li",[e._v("Dedicated database")]),e._v(" "),s("li",[e._v("Data encryption at rest and in transit")]),e._v(" "),s("li",[e._v("Continuous backup and point in time data recovery")]),e._v(" "),s("li",[e._v("Full access to backups")]),e._v(" "),s("li",[e._v("Tableau integration support")])]),e._v(" "),s("p",[e._v("For further information please "),s("a",{attrs:{href:"mailto:hi@web3labs.com"}},[e._v("email us")]),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"free"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#free"}},[e._v("#")]),e._v(" Free")]),e._v(" "),s("p",[e._v("A free, feature limited version of Epirus is available. This version is updated periodically, unlike the Azure and SaaS offerings which are constantly being updated with the latest features.")]),e._v(" "),s("p",[e._v("To get started with the free version, you'll need "),s("a",{attrs:{href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git"),s("OutboundLink")],1),e._v(" installed and an Ethereum, Hyperledger Besu or Quorum node endpoint.")]),e._v(" "),s("p",[e._v("Run the following command to download Epirus:")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone https://github.com/epirus-io/epirus-free.git\n")])])]),s("p",[e._v("Navigate to the "),s("code",[e._v("epirus-free")]),e._v(" directory directory and run the instance with:")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" epirus-free\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("NODE_ENDPOINT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("http://"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("node_endpoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" docker-compose up\n")])])]),s("p",[e._v("Note that if setting "),s("code",[e._v("NODE_ENDPOINT")]),e._v(" to a local Ethereum instance, you may need to use the IP address associated with the Docker bridged interface.")]),e._v(" "),s("p",[e._v("On Linux, the bridged adapter should be 172.16.239.1, as denoted in docker-compose.yml. To connect to a local node, start with the command:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("NODE_ENDPOINT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("http://172.16.239.1:8545 docker-compose up\n")])])]),s("p",[e._v("On MacOS, a platform sepcific command is required due to limitations around the Docker network stack on MacOS. This is as follows:")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("NODE_ENDPOINT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("http://host.docker.internal:8545 docker-compose up\n")])])]),s("p",[e._v("Note that in both cases, your local instance of geth must be started with "),s("code",[e._v("--rpcaddr 0.0.0.0")]),e._v(" and "),s("code",[e._v('--rpcvhosts="*"')]),e._v(", or Epirus will be unable to access it.")]),e._v(" "),s("p",[e._v("Append the "),s("code",[e._v("-d")]),e._v(" argument to run the containers in the background")]),e._v(" "),s("p",[e._v("You will be able to access the Explorer UI via:")]),e._v(" "),s("p",[s("a",{attrs:{href:"http://localhost/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://localhost"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("To stop the containers use:")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[e._v("docker-compose down\n")])])]),s("p",[e._v("To connect to new network you should remove the volumes associated with the old network")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[e._v("docker-compose down -v\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);